// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#pragma once

#include "CppSharp.h"
#include <C:/Users/utilForever/Documents/GitHub/CubbyFlow/Includes/Core/Animation/Animation.h>

namespace CubbyFlowSharp
{
    namespace CubbyFlow
    {
        ref class Animation;
        ref class Frame;
    }
}

namespace CubbyFlowSharp
{
    namespace CubbyFlow
    {
        /// <summary>Abstract base class for animation-related class.</summary>
        /// <remarks>
        /// <para>This class represents the animation logic in very abstract level.</para>
        /// <para>Generally animation is a function of time and/or its previous state.</para>
        /// <para>This base class provides a virtual function update() which can be</para>
        /// <para>overriden by its sub-classes to implement their own state update logic.</para>
        /// </remarks>
        public ref class Animation : ICppInstance
        {
        public:

            [System::Runtime::InteropServices::UnmanagedFunctionPointer(System::Runtime::InteropServices::CallingConvention::Cdecl)] 
            delegate void Action_IntPtr(::System::IntPtr _0);

            property ::CubbyFlow::Animation* NativePtr;
            property System::IntPtr __Instance
            {
                virtual System::IntPtr get();
                virtual void set(System::IntPtr instance);
            }

            Animation(::CubbyFlow::Animation* native);
            static Animation^ __CreateInstance(::System::IntPtr native);
            Animation();

            Animation(CubbyFlowSharp::CubbyFlow::Animation^ _0);

            ~Animation();

            /// <summary>Updates animation state for given</summary>
            /// <remarks>
            /// <para>This function updates animation state by calling Animation::onUpdate</para>
            /// <para>function.</para>
            /// </remarks>
            void Update(CubbyFlowSharp::CubbyFlow::Frame^ frame);

            protected:
            bool __ownsNativeInstance;
        };
    }
}
